# If not running interactively, don't do anything
[[ $- != *i* ]] && return

pathadd() {
  #echo $1 | tr -s ":" "\n" | while read dir; do 
  while read dir; do 
    if [ -d "$dir" ] && [[ ":$PATH:" != *":$dir:"* ]]; then
      PATH="${PATH:+"$PATH:"}$dir"
    fi
  done< <(echo $1 | tr -s ":" "\n")
}

SCRIPTPATH="$( cd "$(dirname "$BASH_SOURCE")" ; pwd -P )"
TOOLS_BIN_PATH=$(dirname "${SCRIPTPATH}")/bin
pathadd ${TOOLS_BIN_PATH}

if [ -d ${HOME}/bin ]; then
  pathadd ${HOME}/bin
fi

export GOPATH=${HOME}/gocode:${HOME}/projects/go
pathadd ${HOME}/gocode/bin:${HOME}/projects/go/bin

export GPG_TTY=$(tty)

# Aliases
if [[ "$(uname)" == "Darwin" ]]; then
  export CLICOLOR=1
  export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
else
  alias ls='ls --color=auto'
fi

# Custom prompt, need to have cppprompt compiled
pchar_blank=$(echo -e "\001\033[0m\002")
pchar_folder_sep=$(echo -e "\001\033[0;31m\002")
pchar_error=$(echo -e "\001\033[0;31m\002")
neutral_char=$(echo -e "\u2237")
no_error_char=$(echo -e "\u2591")


# 2185                                                                                                                                                                                                                                         
# 2237 *                                                                                                                                                                                                                                       
# 2261                                                                                                                                                                                                                                         
# 2299 bof                                                                                                                                                                                                                                     
# 2588                                                                                                                                                                                                                                         
# 2591 *                                                                                                                                                                                                                                       
# 2592                                                                                                                                                                                                                                         
# 2616                                                                                                                                                                                                                                         
# 2617                                                                                                                                                                                                                                         
# 2302                                                                                                                                                                                                                                         
# 2616 *

PS1='`${TOOLS_BIN_PATH}/cppprompt $? "$(pwd)" 38 --color "${pchar_blank}:${pchar_blank}:${pchar_blank}:${pchar_folder_sep}:${pchar_error}" --truncate 6 --chars "${no_error_char}${neutral_char}"`\[\033[01;31m\]\$\[\033[00m\] '

# Completion
if [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi

# Nice colors
if [ ${TERM} = "xterm" ]; then
	export TERM="xterm-256color"
fi

# Default editor
export EDITOR=vim

# SSH with tmux
ssh() {
  # Do nothing if we are not inside tmux or ssh is called without arguments
  if [[ $# == 0 || -z $TMUX ]]; then
    command ssh $@
    return
  fi
  # The hostname is the last parameter (i.e. ${(P)#})
  #local remote=${${(P)#}%.*} # ZSH version
  local remote="${@: -1}"
  local old_name="$(tmux display-message -p '#W')"
  local renamed=0
  # Save the current name
  if [[ $remote != -* ]]; then
    renamed=1
    tmux rename-window $remote
  fi
  command ssh $@
  if [[ $renamed == 1 ]]; then
    tmux rename-window "$old_name"
  fi
}

# No history dups
export HISTCONTROL=ignoreboth:erasedups

# Development
export CC=/usr/bin/clang
export CXX=/usr/bin/clang++

# Molokai theme
#declare map0
#map0=(  [foreground     ]='#F8F8F2'     [background     ]='#272822'
#        [cursor         ]='#F8F8F0'     [selection      ]='#49483E'
#        [pink           ]='#F92672'     [green          ]='#A6E22E'
#        [yellow         ]='#E6DB74'     [blue           ]='#66D9EF'
#        [purple         ]='#AE81FF'     [orange         ]='#FD971F'
#        [gray           ]='#75715E'                                     )
#map1=(  # Foreground    # Background    # Cursor
#        foreground      background      cursor                          )
#map2=(  # Black         # Red           # Green         # Yellow
#        background      pink            green           yellow
#        # Blue          # Magenta       # Cyan          # White
#        blue            purple          orange          foreground
#        # Bold black    # Bold red      # Bold green    # Bold yellow
#        selection       pink            green           yellow
#        # Bold blue     # Bold magenta  # Bold cyan     # Bold white
#        blue            purple          orange          foreground      )
##map3=(  M o n o k a i                                                   )
##map4=(  1 6 3 2 4 5 7                                                   )
#for i in "${!map1[@]}"; do echo -en "\e]1$i;${map0[${map1[$i]}]}\a"; done
#for i in "${!map2[@]}"; do echo -en "\e]4;$i;${map0[${map2[$i]}]}\a"; done
##for i in "${!map3[@]}"; do echo -en "\e[1;3${map4[$i]}m${map3[$i]}"; done
##echo -e "\e[0m color scheme applied"

# Starting ssh-agent if configured to do so in main ~/.bashrc
SSH_ENV="$HOME/.ssh/environment"
function start_agent {
   echo "Initialising new SSH agent..."
   /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
   echo succeeded
   chmod 600 "${SSH_ENV}"
   . "${SSH_ENV}" > /dev/null
   #/usr/bin/ssh-add;
}
if [ 0 -lt "0${TOOLS_ENABLE_SSH_AGENT}" ]; then
  # Source SSH settings, if applicable
  if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     #ps ${SSH_AGENT_PID} doesn't work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
         start_agent;
     }
  else
     start_agent;
  fi
fi
